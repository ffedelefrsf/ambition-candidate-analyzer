/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as CareersIndexRouteImport } from './routes/careers/index'
import { Route as CandidatesIndexRouteImport } from './routes/candidates/index'
import { Route as CareersCreateRouteImport } from './routes/careers/create'
import { Route as CandidatesCreateRouteImport } from './routes/candidates/create'
import { Route as CareersCareerIdFindCandidateRouteImport } from './routes/careers_/$careerId/find-candidate'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const CareersIndexRoute = CareersIndexRouteImport.update({
  id: '/careers/',
  path: '/careers/',
  getParentRoute: () => rootRouteImport,
} as any)
const CandidatesIndexRoute = CandidatesIndexRouteImport.update({
  id: '/candidates/',
  path: '/candidates/',
  getParentRoute: () => rootRouteImport,
} as any)
const CareersCreateRoute = CareersCreateRouteImport.update({
  id: '/careers/create',
  path: '/careers/create',
  getParentRoute: () => rootRouteImport,
} as any)
const CandidatesCreateRoute = CandidatesCreateRouteImport.update({
  id: '/candidates/create',
  path: '/candidates/create',
  getParentRoute: () => rootRouteImport,
} as any)
const CareersCareerIdFindCandidateRoute =
  CareersCareerIdFindCandidateRouteImport.update({
    id: '/careers_/$careerId/find-candidate',
    path: '/careers/$careerId/find-candidate',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/candidates/create': typeof CandidatesCreateRoute
  '/careers/create': typeof CareersCreateRoute
  '/candidates': typeof CandidatesIndexRoute
  '/careers': typeof CareersIndexRoute
  '/careers/$careerId/find-candidate': typeof CareersCareerIdFindCandidateRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/candidates/create': typeof CandidatesCreateRoute
  '/careers/create': typeof CareersCreateRoute
  '/candidates': typeof CandidatesIndexRoute
  '/careers': typeof CareersIndexRoute
  '/careers/$careerId/find-candidate': typeof CareersCareerIdFindCandidateRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/candidates/create': typeof CandidatesCreateRoute
  '/careers/create': typeof CareersCreateRoute
  '/candidates/': typeof CandidatesIndexRoute
  '/careers/': typeof CareersIndexRoute
  '/careers_/$careerId/find-candidate': typeof CareersCareerIdFindCandidateRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/candidates/create'
    | '/careers/create'
    | '/candidates'
    | '/careers'
    | '/careers/$careerId/find-candidate'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/candidates/create'
    | '/careers/create'
    | '/candidates'
    | '/careers'
    | '/careers/$careerId/find-candidate'
  id:
    | '__root__'
    | '/'
    | '/candidates/create'
    | '/careers/create'
    | '/candidates/'
    | '/careers/'
    | '/careers_/$careerId/find-candidate'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CandidatesCreateRoute: typeof CandidatesCreateRoute
  CareersCreateRoute: typeof CareersCreateRoute
  CandidatesIndexRoute: typeof CandidatesIndexRoute
  CareersIndexRoute: typeof CareersIndexRoute
  CareersCareerIdFindCandidateRoute: typeof CareersCareerIdFindCandidateRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/careers/': {
      id: '/careers/'
      path: '/careers'
      fullPath: '/careers'
      preLoaderRoute: typeof CareersIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/candidates/': {
      id: '/candidates/'
      path: '/candidates'
      fullPath: '/candidates'
      preLoaderRoute: typeof CandidatesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/careers/create': {
      id: '/careers/create'
      path: '/careers/create'
      fullPath: '/careers/create'
      preLoaderRoute: typeof CareersCreateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/candidates/create': {
      id: '/candidates/create'
      path: '/candidates/create'
      fullPath: '/candidates/create'
      preLoaderRoute: typeof CandidatesCreateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/careers_/$careerId/find-candidate': {
      id: '/careers_/$careerId/find-candidate'
      path: '/careers/$careerId/find-candidate'
      fullPath: '/careers/$careerId/find-candidate'
      preLoaderRoute: typeof CareersCareerIdFindCandidateRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CandidatesCreateRoute: CandidatesCreateRoute,
  CareersCreateRoute: CareersCreateRoute,
  CandidatesIndexRoute: CandidatesIndexRoute,
  CareersIndexRoute: CareersIndexRoute,
  CareersCareerIdFindCandidateRoute: CareersCareerIdFindCandidateRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
